@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using Space.Models;
@using SpaceTraders.Api;
@using SpaceTraders.Client;
@using SpaceTraders.Model;

@inject IConfiguration Configuration;
@inject Configuration SpaceConfiration;
@inject SpaceApplication Application;
@inject ProtectedLocalStorage LocalStorage;

<div style="display:flex; gap:1em;">
    <label>
        Account
        <select @bind="SelectedAccountKey">
            @foreach (var account in mAccounts)
            {
                <option selected=@(this.SelectedAccountKey == account.Key) value=@account.Key>@account.Name</option>
            }
        </select>
    </label>
<a href="/register">New</a>
</div>

@code {
    private PlayerAccount[] mAccounts = Array.Empty<PlayerAccount>();

    private string SelectedAccountKey
    {
        get => SpaceConfiration.AccessToken;
        set
        {
            _ = this.Application.SetPlayerAccessToken(value);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (!firstRender)
        {
            return;
        }

        var baseAccounts = await this.LocalStorage.GetAsync<PlayerAccount[]>("Accounts");
        if (baseAccounts.Success && baseAccounts.Value is not null && baseAccounts.Value.Length > 0)
        {
            mAccounts = baseAccounts.Value;

            this.SelectedAccountKey = mAccounts.First().Key;

            this.StateHasChanged();
        }
    }
}
