/*
 * SpaceTraders API
 *
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using Xunit;
using SpaceTraders.Api;
// uncomment below to import models
//using SpaceTraders.Model;

namespace SpaceTraders.Test.Api
{
    /// <summary>
    ///  Class for testing FleetApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FleetApiTests : IDisposable
    {
        private readonly FleetApi mInstance;

        public FleetApiTests()
        {
            mInstance = new FleetApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FleetApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FleetApi
            //Assert.IsType<FleetApi>(instance);
        }

        /// <summary>
        /// Test CreateChart
        /// </summary>
        [Fact]
        public void CreateChartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.CreateChart(shipSymbol);
            //Assert.IsType<CreateChart201Response>(response);
        }

        /// <summary>
        /// Test CreateShipShipScan
        /// </summary>
        [Fact]
        public void CreateShipShipScanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.CreateShipShipScan(shipSymbol);
            //Assert.IsType<CreateShipShipScan201Response>(response);
        }

        /// <summary>
        /// Test CreateShipSystemScan
        /// </summary>
        [Fact]
        public void CreateShipSystemScanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.CreateShipSystemScan(shipSymbol);
            //Assert.IsType<CreateShipSystemScan201Response>(response);
        }

        /// <summary>
        /// Test CreateShipWaypointScan
        /// </summary>
        [Fact]
        public void CreateShipWaypointScanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.CreateShipWaypointScan(shipSymbol);
            //Assert.IsType<CreateShipWaypointScan201Response>(response);
        }

        /// <summary>
        /// Test CreateSurvey
        /// </summary>
        [Fact]
        public void CreateSurveyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.CreateSurvey(shipSymbol);
            //Assert.IsType<CreateSurvey201Response>(response);
        }

        /// <summary>
        /// Test DockShip
        /// </summary>
        [Fact]
        public void DockShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.DockShip(shipSymbol);
            //Assert.IsType<DockShip200Response>(response);
        }

        /// <summary>
        /// Test ExtractResources
        /// </summary>
        [Fact]
        public void ExtractResourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //ExtractResourcesRequest? extractResourcesRequest = null;
            //var response = instance.ExtractResources(shipSymbol, extractResourcesRequest);
            //Assert.IsType<ExtractResources201Response>(response);
        }

        /// <summary>
        /// Test GetMounts
        /// </summary>
        [Fact]
        public void GetMountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.GetMounts(shipSymbol);
            //Assert.IsType<GetMounts200Response>(response);
        }

        /// <summary>
        /// Test GetMyShip
        /// </summary>
        [Fact]
        public void GetMyShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.GetMyShip(shipSymbol);
            //Assert.IsType<GetMyShip200Response>(response);
        }

        /// <summary>
        /// Test GetMyShipCargo
        /// </summary>
        [Fact]
        public void GetMyShipCargoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.GetMyShipCargo(shipSymbol);
            //Assert.IsType<GetMyShipCargo200Response>(response);
        }

        /// <summary>
        /// Test GetMyShips
        /// </summary>
        [Fact]
        public void GetMyShipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? limit = null;
            //var response = instance.GetMyShips(page, limit);
            //Assert.IsType<GetMyShips200Response>(response);
        }

        /// <summary>
        /// Test GetShipCooldown
        /// </summary>
        [Fact]
        public void GetShipCooldownTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.GetShipCooldown(shipSymbol);
            //Assert.IsType<GetShipCooldown200Response>(response);
        }

        /// <summary>
        /// Test GetShipNav
        /// </summary>
        [Fact]
        public void GetShipNavTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.GetShipNav(shipSymbol);
            //Assert.IsType<GetShipNav200Response>(response);
        }

        /// <summary>
        /// Test InstallMount
        /// </summary>
        [Fact]
        public void InstallMountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //InstallMountRequest? installMountRequest = null;
            //var response = instance.InstallMount(shipSymbol, installMountRequest);
            //Assert.IsType<InstallMount201Response>(response);
        }

        /// <summary>
        /// Test Jettison
        /// </summary>
        [Fact]
        public void JettisonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //JettisonRequest? jettisonRequest = null;
            //var response = instance.Jettison(shipSymbol, jettisonRequest);
            //Assert.IsType<Jettison200Response>(response);
        }

        /// <summary>
        /// Test JumpShip
        /// </summary>
        [Fact]
        public void JumpShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //JumpShipRequest? jumpShipRequest = null;
            //var response = instance.JumpShip(shipSymbol, jumpShipRequest);
            //Assert.IsType<JumpShip200Response>(response);
        }

        /// <summary>
        /// Test NavigateShip
        /// </summary>
        [Fact]
        public void NavigateShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //NavigateShipRequest? navigateShipRequest = null;
            //var response = instance.NavigateShip(shipSymbol, navigateShipRequest);
            //Assert.IsType<NavigateShip200Response>(response);
        }

        /// <summary>
        /// Test NegotiateContract
        /// </summary>
        [Fact]
        public void NegotiateContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.NegotiateContract(shipSymbol);
            //Assert.IsType<NegotiateContract200Response>(response);
        }

        /// <summary>
        /// Test OrbitShip
        /// </summary>
        [Fact]
        public void OrbitShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //var response = instance.OrbitShip(shipSymbol);
            //Assert.IsType<OrbitShip200Response>(response);
        }

        /// <summary>
        /// Test PatchShipNav
        /// </summary>
        [Fact]
        public void PatchShipNavTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //PatchShipNavRequest? patchShipNavRequest = null;
            //var response = instance.PatchShipNav(shipSymbol, patchShipNavRequest);
            //Assert.IsType<GetShipNav200Response>(response);
        }

        /// <summary>
        /// Test PurchaseCargo
        /// </summary>
        [Fact]
        public void PurchaseCargoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //PurchaseCargoRequest? purchaseCargoRequest = null;
            //var response = instance.PurchaseCargo(shipSymbol, purchaseCargoRequest);
            //Assert.IsType<PurchaseCargo201Response>(response);
        }

        /// <summary>
        /// Test PurchaseShip
        /// </summary>
        [Fact]
        public void PurchaseShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PurchaseShipRequest? purchaseShipRequest = null;
            //var response = instance.PurchaseShip(purchaseShipRequest);
            //Assert.IsType<PurchaseShip201Response>(response);
        }

        /// <summary>
        /// Test RefuelShip
        /// </summary>
        [Fact]
        public void RefuelShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //RefuelShipRequest? refuelShipRequest = null;
            //var response = instance.RefuelShip(shipSymbol, refuelShipRequest);
            //Assert.IsType<RefuelShip200Response>(response);
        }

        /// <summary>
        /// Test RemoveMount
        /// </summary>
        [Fact]
        public void RemoveMountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //RemoveMountRequest? removeMountRequest = null;
            //var response = instance.RemoveMount(shipSymbol, removeMountRequest);
            //Assert.IsType<RemoveMount201Response>(response);
        }

        /// <summary>
        /// Test SellCargo
        /// </summary>
        [Fact]
        public void SellCargoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //SellCargoRequest? sellCargoRequest = null;
            //var response = instance.SellCargo(shipSymbol, sellCargoRequest);
            //Assert.IsType<SellCargo201Response>(response);
        }

        /// <summary>
        /// Test ShipRefine
        /// </summary>
        [Fact]
        public void ShipRefineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //ShipRefineRequest? shipRefineRequest = null;
            //var response = instance.ShipRefine(shipSymbol, shipRefineRequest);
            //Assert.IsType<ShipRefine201Response>(response);
        }

        /// <summary>
        /// Test TransferCargo
        /// </summary>
        [Fact]
        public void TransferCargoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //TransferCargoRequest? transferCargoRequest = null;
            //var response = instance.TransferCargo(shipSymbol, transferCargoRequest);
            //Assert.IsType<TransferCargo200Response>(response);
        }

        /// <summary>
        /// Test WarpShip
        /// </summary>
        [Fact]
        public void WarpShipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string shipSymbol = null;
            //NavigateShipRequest? navigateShipRequest = null;
            //var response = instance.WarpShip(shipSymbol, navigateShipRequest);
            //Assert.IsType<NavigateShip200Response>(response);
        }
    }
}
